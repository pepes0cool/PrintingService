@using Microsoft.AspNetCore.Identity
@using SSPS.Models
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User); // get user from db to output name
}
<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark btn" style="margin-top:0; padding: 0.5rem;background-color:aliceblue"
               asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                @user.UserName
            </a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline m-0 p-0" asp-area="Identity"
                  asp-page="/Account/Logout"
                  asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0"
                        style="margin-top:0; padding: 0.5rem; margin-left:5px;background-color:aliceblue">
                    Logout
                </button>
            </form>
        </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark btn btn-link btn-light"style="margin-right:20px" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark btn btn-link btn-light btn-lg"style="margin-right:10px" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
